external integer procedure newspool(z);
zone z;

<* newspool 860113/hj.
   newspool opretter en fil med scope temp p} den disc, hvor processen
   har flest tempor{re segmenter til r}dighed. Zonen z }bnes til filen
   med kind=4, giveup=1 shift 9.
*>

begin
   integer i,ch,max,pda,maxchains,segs,slsize;
   integer array ia,ia1(1:10),bas(1:8),sbas(1:2),indx(1:3),ctbl(1:18),
                 claims(1:8),doc(1:4);
   long array la(1:2);
   long array field docname;
   real r;
   zone z1(1,1,stderror);
   open(z1,0,<::>,0);
   system(11,0,bas);
   sbas(1):=bas(3);
   sbas(2):=bas(4);
   monitor(72,z1,0,sbas);

   system(5,92,indx);
   maxchains:=(indx(3)-indx(1))//2;

   begin
      integer array ntb(1:maxchains);

      system(5,indx(1),ntb);
      docname:=18;
      max:=0;
      pda:=system(6,0,la);

      for ch:=1 step 1 until maxchains do
      begin
         system(5,ntb(ch)-36,ctbl);
         if ctbl(10)<>0 then
         begin  <* something mounted *>
            system(5,pda+ctbl(1),claims);
            segs:=claims(1) extract 12*ctbl(15);  <* key0-slices * slicelength *>
            if segs>max then
            begin
               max:=segs;
               slsize:=ctbl(15);
               tofrom(doc,ctbl.docname,8);
            end;
         end;
      end;
   end;


   for i:=7,8,9,10 do ia(i):=0;
   for i:=2,3,4,5 do ia(i):=doc(i-1);
   ia(6):=systime(7,0,r);
   ia(1):=slsize;
   open(z,4,<::>,1 shift 9);
   i:=monitor(40,z,0,ia);
   if i<>0 then system(9,i,<:newspool:>);

   outrec(z,2);
   setposition(z,0,0);
   close(z1,false);
   open(z1,0,<::>,0);
   monitor(72,z1,0,bas);
   newspool:=0;

end proc. newspool;

end
