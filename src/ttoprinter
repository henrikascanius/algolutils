external integer procedure toprinter(oz,nz,dev,trans,group,queue,copy);
value copy; zone oz,nz; string dev,trans,group,queue; integer copy;

begin
   zone z,z1(1,1,stderror);
   integer array carr(1:39),rarr(1:11),zia(1:20),tail(1:10);
   integer i,clen,cop,j;
   array field tf,uf,sf,rf,gf,qf,znf;
   integer field ctf;
   array help(1:2);
   real time;

   procedure outhead;
   begin
      integer i; 
      real time;

      systime(5,0,time);
      i:=1;
      write(oz,"nl",1,<:to printer :>,<<zd.dd>,(time+20)/10 000,
            ":",1,"sp",1,string carr.tf(increase(i)));

   end local proc. outhead;


   tf:=4; uf:=16; sf:=40; rf:=50; gf:=60; qf:=68; ctf:=60; znf:=2;

   for i:=1 step 1 until 39 do carr(i):=0;

   for i:=7,8,13 step 1 until 20, 25,30,39 do carr(i):=-1;

   movestring(carr.tf,1,trans);
   movestring(carr.rf,1,dev);
   system(6,i,help);
   tofrom(carr.uf,help,8);
   getzone6(nz,zia);
   tofrom(carr.sf,zia.znf,8);
   movestring(carr.gf,1,group);
   movestring(carr.qf,1,queue);

   if carr.gf(1)<>real<::> and carr.qf(1)<>real <::> then
   begin
      clen:=39;
      carr.ctf:=0
   end else clen:=30;
   cop:=0;

   if copy>0  then
   begin
          i:=monitor(76,nz,0,zia);
          if i=0 <* and zia(1) extract 2=0  *> then
          begin
            open(z1,0,<:spoolbase:>,0);
            i:=monitor(42,z1,i,tail);
            if i=0 then i:=tail(1)-1 shift 23;
 
            if i=0 then
            begin
               outhead;
               tail(1):=tail(7);
               tail(2):=tail(8);
               i:=monitor(50,nz,3,tail);
               if i<>0 then write(oz,<: ***permanent entry result:>,i) else
               begin
                  i:=monitor(74,nz,i,tail);
                  if i<>0 then
                  begin
                     write(oz,<: ***set entry base result:>,i);
                     monitor(50,z,0,tail);
                  end;
               end;
            end;

            if i=0 then
            begin
               outchar(oz,'sp');
               outtext(oz,12,carr.sf,1);
               write(oz,<:permanent:>,tail(1),tail(2));
             end;
         end;

      repeat
         outhead;
         i:=transfer(2,carr,clen,rarr,11);
         if i=0 and rarr(1)<>0 then i:=-1;

         if i=0 then
            cop:=cop+1;
         j:=1;
         write(oz,<: spool :>,string carr.sf(increase(j)));

         if i=0 then
         begin
            write(oz,<:  transport:>,rarr(2),"sp",3);
            outtext(oz,12,carr.gf,1);
            outtext(oz,12,carr.qf,1);
         end else

         if i>0 then
         begin
            write(oz,<: ***transport reply: :>);
            if i<10 and i>1 then write(oz,case i-1 of
                     (<:PRIMO message rejected:>,
                      <:PRIMO message unintelligible:>,
                      <:PRIMO malfunction:>,
                      <:PRIMO unknown:>,
                      <:buffer claim exceeded:>,
                      <:action:>,
                      <:param:>,
                      <:illegal criterion:>))  else write(oz,i);

         end else write(oz,<: ***PRIMO reply code: :>,rarr(1));

      until cop=copy or i<>0;
   end else
   begin
      outhead;
      write(oz,<: ***copy =:>,copy);
      i:=1 shift 23;
   end;
   outchar(oz,10);
   setposition(oz,0,0);
   toprinter:=i

end proc. toprinter;

end
